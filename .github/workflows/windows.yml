name: Windows

on: [push]

jobs:
  windows-latest:
    runs-on: windows-latest
    strategy:
      matrix:
        compiler: [ clang, gcc, msvc-14.0, msvc-14.2 ]
        standard: [ c++14, c++17, c++2a ]
        mode: [ Debug, Release, RelWithDebInfo, MinSizeRel ]
    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: choco install -y cppcheck

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}\build

    - name: Build
      shell: bash 
      working-directory: ${{runner.workspace}}\build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.mode }} -DCMAKE_CXX_FLAGS=-std=${{ matrix.standard }} -DCMAKE_CXX_COMPILER=${{ matrix.compiler}}; cmake --build . --config ${{ matrix.mode }}
      
    - name: Run CppCheck
      working-directory: ${{runner.workspace}}/
      shell: bash
      run: cppcheck --enable=all --force ${{runner.workspace}}/Atomic/include/atomic.hpp -I${{runner.workspace}}/Atomic/include/ --output-file=cppcheck-log-${{ matrix.standard }}-${{ matrix.compiler }}-${{ matrix.mode }}.txt

    - name: Run Tests
      working-directory: ${{runner.workspace}}\build\${{ matrix.mode }}
      run: ./Tests.exe > test-log-${{ matrix.standard }}-${{ matrix.compiler }}-${{ matrix.mode }}.txt 

    - name: 'Upload Test Logs'
      uses: actions/upload-artifact@v2
      with:
            name: logs-windows
            path: ${{runner.workspace}}\build\${{ matrix.mode}}\test-log-${{ matrix.standard }}-${{ matrix.compiler }}-${{ matrix.mode }}.txt
            retention-days: 1

    - name: 'Upload CppCheck Logs'
      uses: actions/upload-artifact@v2
      with:
            name: logs-ubuntu-focal
            path: ${{runner.workspace}}/cppcheck-log-${{ matrix.standard }}-${{ matrix.compiler }}-${{ matrix.mode }}.txt
            retention-days: 1