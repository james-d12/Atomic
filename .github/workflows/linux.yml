name: Linux

on: [push]

jobs:
  ubuntu-focal:
    runs-on: ubuntu-20.04
    strategy:
        matrix:
            compiler: [ g++-9, g++-10, clang++-9, clang++-10 ]
            standard: [ c++14, c++17, c++2a ]
            mode: [ Debug, Release, RelWithDebInfo, MinSizeRel ]
    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: sudo apt-get install g++-9 g++-10 clang-9 clang-10 clang-tidy cppcheck

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Build 
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.mode }} -DCMAKE_CXX_FLAGS=-std=${{ matrix.standard }} -DCMAKE_CXX_COMPILER=${{ matrix.compiler}}; cmake --build . --config ${{ matrix.mode }} 

    - name: Run CppCheck
      working-directory: ${{runner.workspace}}/
      shell: bash
      run: cppcheck --enable=all --force ${{runner.workspace}}/Atomic/include/atomic.hpp -I${{runner.workspace}}/Atomic/include/ --output-file=cppcheck-log-${{ matrix.standard }}-${{ matrix.compiler }}-${{ matrix.mode }}.txt

    - name: Run Clang-Tidy
      working-directory: ${{runner.workspace}}/
      shell: bash 
      run: clang-tidy -checks='*' ${{runner.workspace}}/Atomic/include/**/*.hpp -- -std=${{ matrix.standard }} -I${{runner.workspace}}/Atomic/include/ > clang-tidy-log-${{ matrix.standard }}-${{ matrix.compiler }}-${{ matrix.mode }}.txt

    - name: Run Tests
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ${{runner.workspace}}/build/Tests > test-log-${{ matrix.standard }}-${{ matrix.compiler }}-${{ matrix.mode }}.txt

    - name: 'Upload Test Logs'
      uses: actions/upload-artifact@v2
      with:
            name: logs-ubuntu-focal
            path: ${{runner.workspace}}/build/test-log-${{ matrix.standard }}-${{ matrix.compiler }}-${{ matrix.mode }}.txt
            retention-days: 1

    - name: 'Upload CppCheck Logs'
      uses: actions/upload-artifact@v2
      with:
            name: logs-ubuntu-focal
            path: ${{runner.workspace}}/cppcheck-log-${{ matrix.standard }}-${{ matrix.compiler }}-${{ matrix.mode }}.txt
            retention-days: 1

    - name: 'Upload Clang-Tidy Logs'
      uses: actions/upload-artifact@v2
      with:
            name: logs-ubuntu-focal
            path: ${{runner.workspace}}/clang-tidy-log-${{ matrix.standard }}-${{ matrix.compiler }}-${{ matrix.mode }}.txt
            retention-days: 1
            
  ubuntu-bionic:
    runs-on: ubuntu-18.04
    strategy:
        matrix:
            compiler: [ g++-7, g++-8, clang++-7, clang++-8 ]
            standard: [ c++14, c++17 ]
            mode: [ Debug, Release, RelWithDebInfo, MinSizeRel ]

    steps:
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: sudo apt install g++-7 g++-8 clang-7 clang-8 clang-tidy cppcheck

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Build 
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.mode }} -DCMAKE_CXX_FLAGS=-std=${{ matrix.standard }} -DCMAKE_CXX_COMPILER=${{ matrix.compiler}}; cmake --build . --config ${{ matrix.mode }} 

    - name: Run CppCheck
      working-directory: ${{runner.workspace}}/
      shell: bash
      run: cppcheck --enable=all --force ${{runner.workspace}}/Atomic/include/atomic.hpp -I${{runner.workspace}}/Atomic/include/ --output-file=cppcheck-log-${{ matrix.standard }}-${{ matrix.compiler }}-${{ matrix.mode }}.txt

    - name: Run Clang-Tidy
      working-directory: ${{runner.workspace}}/
      shell: bash 
      run: clang-tidy -checks='*' ${{runner.workspace}}/Atomic/include/atomic.hpp -- -std=${{ matrix.standard }} -I${{runner.workspace}}/Atomic/include/ > clang-tidy-log-${{ matrix.standard }}-${{ matrix.compiler }}-${{ matrix.mode }}.txt

    - name: Run Tests
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ${{runner.workspace}}/build/Tests > test-log-${{ matrix.standard }}-${{ matrix.compiler }}-${{ matrix.mode }}.txt

    - name: 'Upload Test Logs'
      uses: actions/upload-artifact@v2
      with:
            name: logs-ubuntu-bionic
            path: ${{runner.workspace}}/build/test-log-${{ matrix.standard }}-${{ matrix.compiler }}-${{ matrix.mode }}.txt
            retention-days: 1

    - name: 'Upload CppCheck Logs'
      uses: actions/upload-artifact@v2
      with:
            name: logs-ubuntu-bionic
            path: ${{runner.workspace}}/cppcheck-log-${{ matrix.standard }}-${{ matrix.compiler }}-${{ matrix.mode }}.txt
            retention-days: 1

    - name: 'Upload Clang-Tidy Logs'
      uses: actions/upload-artifact@v2
      with:
            name: logs-ubuntu-bionic
            path: ${{runner.workspace}}/clang-tidy-log-${{ matrix.standard }}-${{ matrix.compiler }}-${{ matrix.mode }}.txt
            retention-days: 1
